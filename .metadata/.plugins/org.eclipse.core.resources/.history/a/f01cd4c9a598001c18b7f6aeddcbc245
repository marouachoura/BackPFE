package com.example.demo.entities;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinTable;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;

import com.example.demo.security.models.Role;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.NonNull;


@Entity
//@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
@Table(name = "employes" , uniqueConstraints = { 
		@UniqueConstraint(columnNames = "username"),
		@UniqueConstraint(columnNames = "email")} 
	)
public class Employe implements Serializable {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	//@NonNull
	private String nomPrenom;
	//@NonNull
	private int cin;
	//@NonNull
	@Temporal(TemporalType.DATE)
	private Date dateNais;
//	@NonNull
	private String login;
	//@NonNull
	//private String password;
	@ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.PERSIST)
	@JoinTable(name = "EmployeFormation", joinColumns = {
			@JoinColumn(name = "employe_id", referencedColumnName = "id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "formation_id", referencedColumnName = "id", nullable = false, updatable = false) })
	//@JsonManagedReference 
	@JsonIgnoreProperties("employes") 
	//@NotFound(action = NotFoundAction.IGNORE)
	private Collection<Formation> formations = new ArrayList<>();

	@ManyToOne(fetch = FetchType.LAZY, optional = false)
	//@JsonBackReference (value="employes-movement")
	//@JsonBackReference
	//@JsonIgnore
	@JoinColumn(name = "site_id") //, nullable = false
	@JsonIgnoreProperties("employes") 
	private Site site;
	//private String site ;

	
	@NotBlank
	@Size(max = 20)
	private String username;
	@NotBlank
	@Size(max = 50)
	@Email
	private String email;
	@NotBlank
	@Size(max = 120)
	private String password;
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(	name = "user_roles", 
			 joinColumns = {
						@JoinColumn(name = "user_id", referencedColumnName = "id", nullable = false, updatable = false) }, inverseJoinColumns = {
						@JoinColumn(name = "role_id", referencedColumnName = "id", nullable = false, updatable = false) }
				)
	private Set<Role> roles = new HashSet<>();
	
	
	
	public Employe() {
		super();
		// TODO Auto-generated constructor stub
	}
	

	public Employe(@NonNull String nomPrenom, @NonNull int cin, @NonNull Date dateNais, @NonNull String login,
			 @NotBlank @Size(max = 20) String username,
			@NotBlank @Size(max = 50) @Email String email, @NotBlank @Size(max = 120) String password) {
		super();
		this.nomPrenom = nomPrenom;
		this.cin = cin;
		this.dateNais = dateNais;
		this.login = login;
		//this.formations = formations;
	//	this.site = site;
		this.username = username;
		this.email = email;
		this.password = password;
		//this.roles = roles;
	}

	public Employe(String username, String email, String password) {
		this.username = username;
		this.email = email;
		this.password = password;
	}
	/*public Employe(@NonNull String nomPrenom, @NonNull int cin, @NonNull Date dateNais, @NonNull String login,
			@NonNull String password) {
		super();
		this.nomPrenom = nomPrenom;
		this.cin = cin;
		this.dateNais = dateNais;
		this.login = login;
		this.password = password;
	}

	public Employe(@NonNull String nomPrenom, @NonNull int cin, @NonNull Date dateNais, @NonNull String login,
			@NonNull String password, Site site) {
		super();
		this.nomPrenom = nomPrenom;
		this.cin = cin;
		this.dateNais = dateNais;
		this.login = login;
		this.password = password;
		this.site = site;
	}

	public Employe(Long id, @NonNull String nomPrenom, @NonNull int cin, @NonNull Date dateNais, @NonNull String login,
			@NonNull String password, Collection<Formation> formations, Site site) {
		super();
		this.id = id;
		this.nomPrenom = nomPrenom;
		this.cin = cin;
		this.dateNais = dateNais;
		this.login = login;
		this.password = password;
		this.formations = formations;
		this.site = site;
	}*/

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getNomPrenom() {
		return nomPrenom;
	}

	public void setNomPrenom(String nomPrenom) {
		this.nomPrenom = nomPrenom;
	}

	public int getCin() {
		return cin;
	}

	public void setCin(int cin) {
		this.cin = cin;
	}

	public Date getDateNais() {
		return dateNais;
	}

	public void setDateNais(Date dateNais) {
		this.dateNais = dateNais;
	}

	public String getLogin() {
		return login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	//@JsonManagedReference
	public Collection<Formation> getFormations() {
		return formations;
	}

	public void setFormations(Collection<Formation> formations) {
		this.formations = formations;
	}

/*	public String getSite() {
		return site;
	}

	public void setSite(String site) {
		this.site = site;
	}*/

	/*public String toStringEmpl() {
		return "Employe [nomPrenom=" + nomPrenom + ", cin=" + cin + ", dateNais=" + dateNais + ", login=" + login
				+ ", password=" + password + ", formations=" + formations + ", site=" + site + ", getId()=" + getId()
				+ ", getNomPrenom()=" + getNomPrenom() + ", getCin()=" + getCin() + ", getDateNais()=" + getDateNais()
				+ ", getLogin()=" + getLogin() + ", getPassword()=" + getPassword() + ", getFormations()="
				+ getFormations() + ", getSite()=" + getSite() + ", getClass()=" + getClass() + ", hashCode()="
				+ hashCode() + ", toString()=" + super.toString() + "]";
	}*/



	public Site getSite() {
		return site;
	}

	public void setSite(Site site) {
		this.site = site;
	}
	
	
	
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public Set<Role> getRoles() {
		return roles;
	}
	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

}